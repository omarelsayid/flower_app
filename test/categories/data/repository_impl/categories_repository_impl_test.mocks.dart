// Mocks generated by Mockito 5.4.5 from annotations
// in flower_app/test/categories/data/repository_impl/categories_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flower_app/categories/data/data_source/categories_remote_data_source.dart'
    as _i4;
import 'package:flower_app/categories/domain/entity/categories_response_entity.dart'
    as _i2;
import 'package:flower_app/categories/domain/entity/specific_category_response_entity.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCategoriesResponseEntity_0 extends _i1.SmartFake
    implements _i2.CategoriesResponseEntity {
  _FakeCategoriesResponseEntity_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSpecificCategoriesResponseEntity_1 extends _i1.SmartFake
    implements _i3.SpecificCategoriesResponseEntity {
  _FakeSpecificCategoriesResponseEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(parent, parentInvocation);
}

/// A class which mocks [CategoriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCategoriesRemoteDataSource extends _i1.Mock
    implements _i4.CategoriesRemoteDataSource {
  MockCategoriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.CategoriesResponseEntity> getAllCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getAllCategories, []),
            returnValue: _i5.Future<_i2.CategoriesResponseEntity>.value(
              _FakeCategoriesResponseEntity_0(
                this,
                Invocation.method(#getAllCategories, []),
              ),
            ),
          )
          as _i5.Future<_i2.CategoriesResponseEntity>);

  @override
  _i5.Future<_i3.SpecificCategoriesResponseEntity> getSpecificCategory(
    String? categoryId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSpecificCategory, [categoryId]),
            returnValue: _i5.Future<_i3.SpecificCategoriesResponseEntity>.value(
              _FakeSpecificCategoriesResponseEntity_1(
                this,
                Invocation.method(#getSpecificCategory, [categoryId]),
              ),
            ),
          )
          as _i5.Future<_i3.SpecificCategoriesResponseEntity>);
}
